@import '@components/Text/text-mixins.less';

.inputWrapperContainer {
  min-width: 0;
  position: relative;

  .inputHint {
    margin-top: 4px;
    display: flex;
    align-items: center;
  }

  --borderWidth: var(--input-borderWidth, 2px);
  --borderColor: var(--input-borderColor);
  --inputWrapperTopPadding: 8px;
  --inputWrapperBottomPadding: 8px;
  --inputWrapperHorizontalPadding: var(--globalHorizontalPadding);
  --inputWrapperMinHeight: 48px;

  .inputWrapper {
    padding: calc(var(--inputWrapperTopPadding) - var(--borderWidth)) 0
      calc(var(--inputWrapperBottomPadding) - var(--borderWidth));

    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 8px;
    color: var(--input-textColor, var(--color-white));
    border-bottom: var(--borderWidth) solid var(--borderColor, transparent);
    min-height: var(--inputWrapperMinHeight);
    box-sizing: border-box;

    &:global(.input--empty) {
      .inputPrefix {
        color: var(--color-gray-200); // TODO: Check in white version
      }
    }

    &:global(.input--padded) {
      padding: calc(var(--inputWrapperTopPadding) - var(--borderWidth))
        calc(var(--inputWrapperHorizontalPadding) - var(--borderWidth))
        calc(var(--inputWrapperBottomPadding) - var(--borderWidth));
    }

    &:global(.input--align-left) {
      :global(.input) {
        text-align: left;
      }
    }

    &:global(.input--align-right) {
      :global(.input) {
        text-align: right;
      }
    }

    :global(.input) {
      font-size: inherit;
      line-height: inherit;
      font-weight: inherit;
    }

    &:global(.input--outlined) {
      border-radius: var(--border-radius-base);
      border: var(--borderWidth) solid var(--borderColor);

      &:global(.input--round) {
        border-radius: 40px;
      }
    }

    :global(.input) {
      background: transparent !important;
      flex: 1 1 auto;
      border: none;
      outline: none;
      font-family: 'Cerebri Sans Pro';
      color: var(--text-color);
      min-width: 0;

      &::placeholder {
        color: var(--input-placeholderColor, var(--color-gray-200));
      }

      &:-webkit-autofill,
      &:-webkit-autofill:hover,
      &:-webkit-autofill:focus,
      &:-webkit-autofill:active {
        box-shadow: 0 0 0 30px var(--bg-color) inset !important;
        -webkit-text-fill-color: var(--input-textColor) !important; // TODO: Check in white version
        caret-color: var(--input-textColor); // TODO: Check in white version
      }

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        appearance: none;
        margin: 0;
      }

      &[type='number'] {
        appearance: textfield;
      }
    }

    &:global(.input--disabled) {
      color: var(--input-borderColor);
    }

    &:global(.input--invalid) {
      --borderColor: var(--input-invalidColor, var(--color-red));
    }

    &:focus-within,
    &:global(.input--focused) {
      --borderColor: var(--input-focusedBorderColor);
    }

    .inputSuffix,
    .inputPrefix {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .inputSuffix {
      align-self: var(--inputAlign);
    }
  }
}
